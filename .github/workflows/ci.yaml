name: CI

on:
  workflow_dispatch: {}
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

jobs:
  # style-only: no compilation, don't need build cache
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check fmt
        run: cargo fmt --all -- --check

  # cross-platform build job with matrix for ubuntu and macos
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-14  # ARM64 runner
            target: aarch64-apple-darwin
          - os: macos-14  # ARM64 runner building for x86
            target: x86_64-apple-darwin
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust target
        run: rustup target add ${{ matrix.target }}

      - name: Cache Rust build
        id: cargo-cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin/
            rust/target
          key: ${{ matrix.os }}-${{ matrix.target }}-cargo-${{ hashFiles('rust/Cargo.lock') }}
          restore-keys: |
            ${{ matrix.os }}-${{ matrix.target }}-cargo-
            ${{ matrix.os }}-cargo-

      # pre-fetch and build everything (libs, bins, tests, examples)
      - name: Cargo fetch
        run: cargo fetch

      - name: Cargo build
        run: cargo build --workspace --target ${{ matrix.target }}

  # clippy (reuses build cache from ubuntu build)
  clippy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Restore Rust build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            rust/target
          key: ubuntu-latest-x86_64-unknown-linux-gnu-cargo-${{ hashFiles('rust/Cargo.lock') }}
          restore-keys: |
            ubuntu-latest-x86_64-unknown-linux-gnu-cargo-
            ubuntu-latest-cargo-

      - name: Cargo clippy
        run: cargo clippy --workspace -- -D warnings

  # tests (reuses build cache from ubuntu build)
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Restore Rust build cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            rust/target
          key: ubuntu-latest-x86_64-unknown-linux-gnu-cargo-${{ hashFiles('rust/Cargo.lock') }}
          restore-keys: |
            ubuntu-latest-x86_64-unknown-linux-gnu-cargo-
            ubuntu-latest-cargo-

      - name: Cargo test
        run: cargo test --workspace -- --nocapture
